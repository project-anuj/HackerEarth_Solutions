#include<bits/stdc++.h>
using namespace std;

int n;
char ar[1001][1001];
int visited[1001][1001];
int dist[1001][1001];

bool isValid(int x,int y)
{
	if(x<1 || x>n ||y<1 ||y>n)
	return false;
	
	if(visited[x][y]==1 || ar[x][y]=='T')
	return false;
	
	return true;
}
int dx[]={-1,0,1,0};
int dy[]={0,1,0,-1};
void bfs(int srcX,int srcY)
{
	queue<pair<int,int>> q;
	q.push({srcX,srcY});
	visited[srcX][srcY]=1;
	dist[srcX][srcY]=0;
	
	while(q.size()>0)
	{
		pair<int,int> curr= q.front();
		q.pop();
		int currX=curr.first;
		int currY=curr.second;
		
		for(int i=0;i<4;i++)
		if(isValid(currX+dx[i],currY+dy[i]))
		{
			int newX=currX+dx[i];
			int newY=currY+dy[i];
			q.push({newX,newY});
			visited[newX][newY]=1;
			dist[newX][newY]=dist[currX][currY]+1;
		}
	}
	int flag=0;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=n;j++)
		{
			if(ar[i][j]=='E')
			{	flag=1;
				cout<<dist[i][j]<<endl;
				break;
			}
		}
		if(flag==1)
		break;
	}
}
int main()
{
	cin>>n;
	for(int i=1;i<=n;i++)
	for(int j=1;j<=n;j++)
	cin>>ar[i][j];
	for(int i=1;i<=n;i++)
	for(int j=1;j<=n;j++)
	if(ar[i][j]=='S')
	{
		bfs(i,j);
		break;
	}
}
